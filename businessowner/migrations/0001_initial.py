# Generated by Django 3.2.8 on 2023-08-05 13:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('superadmin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicBoards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('board_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_academic', to='superadmin.businessowners')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicChapters',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chapter_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicMediums',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medium_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('board_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_boards', to='businessowner.academicboards')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicStandards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('standard', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('medium_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_mediums', to='businessowner.academicmediums')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveBatches',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveChapters',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chapter_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveExams',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exam_title', models.CharField(max_length=50)),
                ('total_questions', models.IntegerField()),
                ('time_duration', models.IntegerField()),
                ('passing_marks', models.IntegerField()),
                ('total_marks', models.IntegerField()),
                ('negative_marks', models.CharField(choices=[('None', 'None'), ('0.25', '0.25'), ('0.33', '0.33')], default='None', max_length=50, verbose_name='negative_marks')),
                ('option_e', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_batch', to='businessowner.competitivebatches')),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_exam', to='superadmin.businessowners')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact_number', models.IntegerField()),
                ('parent_name', models.CharField(max_length=50)),
                ('parent_contact_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{10}$')])),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='students', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('address', models.TextField()),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_batch', to='businessowner.competitivebatches')),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_student', to='superadmin.businessowners')),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_standard', to='businessowner.academicstandards')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.FloatField()),
                ('result', models.CharField(choices=[('pass', 'pass'), ('fail', 'fail')], default='pass', max_length=50, verbose_name='result')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('academic_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_result', to='businessowner.academicboards')),
                ('competitive_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_result', to='businessowner.competitiveexams')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_result', to='businessowner.students')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveSubjects',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_subject', to='superadmin.businessowners')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitiveQuestions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=100)),
                ('options', models.CharField(max_length=100)),
                ('answer', models.CharField(max_length=100)),
                ('question_category', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard')], default='easy', max_length=50, verbose_name='question_category')),
                ('marks', models.IntegerField()),
                ('time_duration', models.TimeField()),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_question', to='superadmin.businessowners')),
                ('competitve_chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_chapter', to='businessowner.competitivechapters')),
            ],
        ),
        migrations.AddField(
            model_name='competitivechapters',
            name='subject_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitive_subject', to='businessowner.competitivesubjects'),
        ),
        migrations.CreateModel(
            name='AcademicSubjects',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_standards', to='businessowner.academicstandards')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicQuestions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=100)),
                ('options', models.CharField(max_length=100)),
                ('answer', models.CharField(max_length=100)),
                ('question_category', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard')], default='easy', max_length=50, verbose_name='question_category')),
                ('marks', models.IntegerField()),
                ('time_duration', models.TimeField()),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('academic_chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_chapter', to='businessowner.academicchapters')),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_question', to='superadmin.businessowners')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicExams',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exam_title', models.CharField(max_length=50)),
                ('total_questions', models.IntegerField()),
                ('time_duration', models.IntegerField()),
                ('passing_marks', models.IntegerField()),
                ('total_marks', models.IntegerField()),
                ('negative_marks', models.CharField(choices=[('None', 'None'), ('0.25', '0.25'), ('0.33', '0.33')], default='None', max_length=50, verbose_name='negative_marks')),
                ('option_e', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active')], default='active', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('business_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_exam', to='superadmin.businessowners')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_standard', to='businessowner.academicstandards')),
            ],
        ),
        migrations.AddField(
            model_name='academicchapters',
            name='subject_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_subjects', to='businessowner.academicsubjects'),
        ),
    ]
